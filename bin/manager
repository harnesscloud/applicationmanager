#!/usr/bin/env python

import sys, thread, os, signal

    
home = os.path.expanduser("~")

if not os.path.exists(os.path.join(home, ".harness-am")):
    os.mkdir(os.path.join(home, ".harness-am"))


try:
    from application.service import *
except:
    #we assume the package is not installed in the system
    print "Package not installed in the system. Running from current directory."
    sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname( __file__ ), "..")))
    sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname( __file__ ), "../application")))
    
    from application.service import *
    
    
    
home = os.path.expanduser("~")

"""
Starter script for the Harness application manager
 """

piddir = os.path.join(home, ".harness-am")
                
def start_harness_appmanager(backgr = False):
    print "Starting application manager"
    if not backgr:
        open(os.path.join(piddir, "am.pid"),'w').write(str(os.getpid()))
        start_application_manager(5556)
    else:
        pid = os.fork()
        if pid == 0:
            open(os.path.join(piddir, "am.pid"),'w').write(str(os.getpid()))
            start_application_manager(5556)
            
        
def print_help():
    print """
    program start/stop [-b]  
    
    Options:
        -b : run in background when starting
        
    """

if __name__ == "__main__":
    try:
        action = sys.argv[1]
    except:
        print_help()
        sys.exit(1)

        
        
    if action.lower() == "start":
        start_harness_appmanager(True if "-b" in sys.argv else False)
            
    elif action.lower() == "stop":
        print "Stopping application manager"
        try:
            os.kill(int(open(os.path.join(piddir, "am.pid"),"r").read()), signal.SIGTERM)
        except:
            pass           
        print "Done!"
        
        
        
        
        